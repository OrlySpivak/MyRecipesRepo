
@{
    ViewBag.Title = "Graph";
}

<script src="http://d3js.org/d3.v3.min.js"></script>

<h2>Stats</h2>

<div class="graph-draw"></div>


<style>
    .y.axisLeft text {
        fill: steelblue;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .bar1 {
        fill: steelblue;
    }

    .x.axis path {
        display: none;
    }
</style>


<script>

    const recepiesPerType = [];
    @foreach (var d in ViewBag.recepiesPerType)
    {
        @: recepiesPerType.push({ xValue: "@d.Type", yValue: "@d.Count" });
    }


    const recepiesPerDay = [];
    @foreach (var d in ViewBag.recepiesPerDay)
    {
        @:recepiesPerDay.push({xValue: "@d.Date", yValue: "@d.Count"});
    }


    const showGraph = (data) => {
        var margin = { top: 80, right: 80, bottom: 80, left: 80 },
            width = 550 - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;
        var x = d3.scale.ordinal()
            .rangeRoundBands([0, width], .1);
        var y0 = d3.scale.linear().domain([300, 1100]).range([height, 0])
        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");
        var yAxisLeft = d3.svg.axis().scale(y0).ticks(4).orient("left");
        var svg = d3.select(".graph-draw").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("class", "graph")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        x.domain(data.map(function (d) { return d.xValue; }));
        y0.domain([0, d3.max(data, function (d) { return d.yValue; })]);

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);
        svg.append("g")
            .attr("class", "y axis axisLeft")
            .attr("transform", "translate(0,0)")
            .call(yAxisLeft)
            .append("text")
            .attr("y", 6)
            .attr("dy", "-2em")
            .style("text-anchor", "end")
            .style("text-anchor", "end")
            .text("Recepies");

        bars = svg.selectAll(".bar").data(data).enter();
        bars.append("rect")
            .attr("class", "bar1")
            .attr("x", function (d) { return x(d.xValue); })
            .attr("width", x.rangeBand())
            .attr("y", function (d) { return y0(d.yValue); })
            .attr("height", function (d, i, j) { return height - y0(d.yValue); });
    }

    showGraph(recepiesPerType);
    showGraph(recepiesPerDay);

</script>