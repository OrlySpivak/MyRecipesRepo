@model IEnumerable<RecipesProj.Models.Recipe>

    <h2>Our Recipes</h2>

<p>
    @Html.ActionLink("Write your own recipe", "Create")
</p>
<div>
    @using (Html.BeginForm())
    {
    <p>
        Name: @Html.TextBox("nameString")
        Type: @Html.TextBox("typeString")
        Description: @Html.TextBox("descriptionString")
        <input type="submit" value="Search" />
    </p>
    }
</div>
<div class="d-flex justify-content-between flex-wrap">
    @foreach (var item in Model)
    {
    <script>
            function facebook(link1, video1, name1, description1) {
                FB.ui({
                    method: 'share',
                    href: video1,
                    link: 'http://localhost:3112/Recipes/Details/1',
                    quote: 'Hi there! this is a great recipe from MyRcepies site - http://localhost:3112/Recipes/Details/' + link1,
                    video: video1,
                    name: name1,
                    description: description1
                }, function (response) {
                    console.log(response);
                }
                );
            };
    </script>

        var URLId = item.VideoURL.Substring(item.VideoURL.IndexOf("?v=") + 3);
        string embedlink = "https://www.youtube.com/embed/" + URLId;

        <div class="p-2 bd-highlight">
            <div class="card p-3 mb-2 bg-light text-dark" style="width: 18rem;">
                <div class="embed-responsive embed-responsive-16by9">
                    <iframe class="embed-responsive-item" src="@embedlink" allowfullscreen></iframe>
                </div>

                <div class="card-body">
                    <h5 class="card-title"> @item.Name </h5>
                    <p class="card-text">
                        <span class="rec-description">@item.Description </span>
                        @Html.ActionLink("Read More", "Details", new { id = item.ID })
                    </p>

                    <div>
                        <div class="rec-details">
                            @Html.DisplayFor(modelItem => item.FoodType.Type) | @Html.DisplayFor(modelItem => item.InsertDate)
                        </div>

                        <div class="d-flex flex-row justify-content-end">
                            <a href="@Url.Action("Edit", new { id = item.ID })" class="btn btn-sm  btn-outline-secondary rec-action-btn">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a href="@Url.Action("Delete", new { id = item.ID })" class="btn btn-sm  btn-outline-secondary rec-action-btn">
                                <i class="fa fa-trash"></i>
                            </a>
                            <a class="btn btn-sm btn-outline-primary rec-action-btn share-fb-btn" onclick="facebook('@item.ID', '@item.VideoURL', '@item.Name', '@item.Description')">
                                <i class="fa fa-facebook"></i>
                            </a>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
